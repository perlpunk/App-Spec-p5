---
-
  args: [ mysimpleapp, -h ]
  stdout:
  - regex: 'Usage: mysimpleapp \[options\]'
  - regex: '--longoption          some long option'
  - regex: '                      split over'
  - regex: '--longoption2         some other long option'
  - regex: '                      description split'
  exit: 0
-
  args: [ mysimpleapp, -vvv ]
  stdout:
  - regex: 'Options: verbose=3'
  exit: 0
-
  args: [ myapp, cook, tea, --sugar, -vv, --verbose ]
  stdout:
    - regex: 'Options: sugar=1,verbose=3'
    - regex: 'Parameters: drink=tea'
    - regex: 'Subcommands: cook'
  exit: 0
-
  args: [ myapp, cook, tea, --with, "almond milk" ]
  stdout:
    - regex: 'Options: with=almond milk'
    - regex: 'Parameters: drink=tea'
    - regex: 'Subcommands: cook'
  exit: 0
-
  args: [ myapp, help ]
  stdout:
    regex: 'Usage: myapp <subcommands> \[options\]'
  exit: 0
-
  args: [ myapp, help ]
  stdout:
    regex: 'Usage: myapp <subcommands> \[options\]'
  exit: 0
-
  args: [ myapp, convert, temperature, celsius, 23, kelvin ]
  stdout:
    - regex: 296\.15K
  exit: 0

-
  args: [ myapp, config, --set, color=auto, --set, push.default=current ]
  stdout:
    - regex: 'Options: set=\(color=auto\),set=\(push.default=current\)'
  exit: 0

-
  args: [ myapp, config, --set, name=wall]
  stdout:
    - regex: 'Options: set=\(name=wall\)'
  exit: 0

-
  args: [ myapp, data, --item, hash, --format YAML]
  stdout:
    - regex: "Data 'hash':"
  exit: 0
-
  args: [ nometa, help ]
  stdout:
    - regex: 'Usage: nometa <subcommands> \[options\]'
    - regex: 'longsubcommand  A subcommand with a'
    - regex: '                very long summary split'
  exit: 0
-
  args: [ nometa, help, longsubcommand ]
  stdout:
    - regex: 'Usage: nometa longsubcommand \[<longparam>\] \[options\]'
    - regex: 'longparam         A parameter with a'
    - regex: '                  very long summary split'
  exit: 0
# vim:et:sts=2:sws=2:sw=2:foldmethod=indent
